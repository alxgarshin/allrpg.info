if(withDocumentEvents){const publicVapidKey="BBIuA0-uI6qAvUjv4s2AIIJWZuiJFFoKA04iP74sUOCUk1SKRVKZdI_oZnehgKOvtBHoxAiBK9EEU4qXpgH4DUY",permission=Notification.permission;async function getExistingSubscription(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return null;const reg=await navigator.serviceWorker.register("/js/webpush-messaging-sw.min.js");return await reg.pushManager.getSubscription()}if(_arSuccess("webpush_subscribe",(function(){localStorage.setItem("webpush","true")})),_arSuccess("webpush_unsubscribe",(function(){localStorage.setItem("webpush","blocked"),getExistingSubscription().then((function(subscription){subscription&&subscription.unsubscribe()}))})),window.subscribeFlow=async function(enforceDialog){const subscription=await getExistingSubscription();if("true"!==localStorage.getItem("webpush")&&_('input[name^="messaging_active"]').checked(!1),null===subscription)if("granted"!==permission&&localStorage.setItem("webpush","false"),"true"===localStorage.getItem("webpush"))_('input[name^="messaging_active"]').checked(!0),webpushInit();else if(enforceDialog||"blocked"!==localStorage.getItem("webpush")){let success=!1;createPseudoPrompt(`<div class="webpush_why">${LOCALE.webpush.request_why}${"denied"===permission?`<div class="webpush_denied">${LOCALE.webpush.checkbox_main_text}</div>`:""}</div>`,LOCALE.webpush.header,"denied"===permission?[]:[{text:LOCALE.webpush.turn_on,class:"main",click:function(){"granted"===permission?(success=!0,_('input[name^="messaging_active"]').checked(!0),webpushInit(),notyDialog?.close()):showMessage({text:LOCALE.webpush.checkbox_main_text,type:"error"})}}],(function(){success||localStorage.setItem("webpush","blocked")}))}},"denied"!==permission)window.subscribeFlow();else{const deviceId=getOrCreateDeviceId();actionRequest({action:"user/webpush_unsubscribe",deviceId:deviceId})}async function webpushInit(){const deviceId=getOrCreateDeviceId(),reg=await navigator.serviceWorker.register("/js/webpush-messaging-sw.min.js");if("granted"!==await Notification.requestPermission())return;const sub=await reg.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:urlBase64ToUint8Array(publicVapidKey)});if(sub){const subPrepared=JSON.parse(JSON.stringify(sub));actionRequest({action:"user/webpush_subscribe",deviceId:deviceId,endpoint:subPrepared.endpoint,p256dh:subPrepared.keys.p256dh,auth:subPrepared.keys.auth,contentEncoding:"aesgcm"})}}function urlBase64ToUint8Array(base64){const b64=(base64+"=".repeat((4-base64.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),raw=atob(b64),out=new Uint8Array(raw.length);for(let i=0;i<raw.length;i++)out[i]=raw.charCodeAt(i);return out}}